version: "3.9"

services:
  postgres-db:
    image: postgres:15
    container_name: postgres-db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=12345
      - POSTGRES_DB=ecommerce
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ecommerce || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: unless-stopped

  backend-api:
    build:
      context: ./Ecommerce_Back_End
      dockerfile: Dockerfile
    container_name: backend-app
    ports:
      - "5000:80"
    environment:
      - ConnectionStrings__DefaultConnection=Host=postgres-db;Port=5432;Database=ecommerce;Username=postgres;Password=12345
    depends_on:
      postgres-db:
        condition: service_healthy
    restart: unless-stopped

  frontend-app:
    build:
      context: ./project-sarona
      dockerfile: Dockerfile
    container_name: frontend-app
    ports:
      - "4200:80"
    environment:
      - API_URL=http://backend-api:80
    depends_on:
      - backend-api
    restart: unless-stopped

volumes:
  postgres-data:
