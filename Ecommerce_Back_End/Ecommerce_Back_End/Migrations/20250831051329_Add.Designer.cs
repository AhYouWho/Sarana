// <auto-generated />
using System;
using Ecommerce_Back_End;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Ecommerce_Back_End.Migrations
{
    [DbContext(typeof(EcommerceDbContext))]
    [Migration("20250831051329_Add")]
    partial class Add
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Ecommerce_Back_End.Model.Data.Cart", b =>
                {
                    b.Property<int>("CARTID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CARTID"));

                    b.Property<DateTime>("CREATEDATE")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("MODIFIEDDATE")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PROID")
                        .HasColumnType("integer");

                    b.Property<int>("QTY")
                        .HasColumnType("integer");

                    b.Property<int>("USERID")
                        .HasColumnType("integer");

                    b.HasKey("CARTID");

                    b.ToTable("CART_TBL");
                });

            modelBuilder.Entity("Ecommerce_Back_End.Model.Data.Category", b =>
                {
                    b.Property<int>("CATEID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CATEID"));

                    b.Property<string>("CATEDESC")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CATENAME")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("CREATEDATE")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DELETEDDATE")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("MODIFIEDDATE")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("STATUS")
                        .HasColumnType("integer");

                    b.HasKey("CATEID");

                    b.ToTable("CATEGORY_TBL");
                });

            modelBuilder.Entity("Ecommerce_Back_End.Model.Data.Order", b =>
                {
                    b.Property<int>("ORDERID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ORDERID"));

                    b.Property<string>("ADDRESSLINE")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CITY")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("COUNTRY")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CREATEDATE")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("MODIFIEDDATE")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ORDERNUMBER")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("PRICE")
                        .HasColumnType("real");

                    b.Property<int>("PROID")
                        .HasColumnType("integer");

                    b.Property<int>("QTY")
                        .HasColumnType("integer");

                    b.Property<string>("STATUS")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("TOTAL")
                        .HasColumnType("real");

                    b.Property<int>("USERID")
                        .HasColumnType("integer");

                    b.Property<string>("ZIPCODE")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ORDERID");

                    b.ToTable("ORDER_TBL");
                });

            modelBuilder.Entity("Ecommerce_Back_End.Model.Data.Product", b =>
                {
                    b.Property<int>("PROID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PROID"));

                    b.Property<int>("CATEID")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CREATEDATE")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DELETEDDATE")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("IMAGE")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("MODIFIEDDATE")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("PRICE")
                        .HasColumnType("numeric");

                    b.Property<string>("PRODESC")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PRONAME")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PROSPECID")
                        .HasColumnType("integer");

                    b.Property<int>("QTY")
                        .HasColumnType("integer");

                    b.Property<int>("STATUS")
                        .HasColumnType("integer");

                    b.Property<int>("SUBCATEID")
                        .HasColumnType("integer");

                    b.HasKey("PROID");

                    b.ToTable("PRODUCT_TBL");
                });

            modelBuilder.Entity("Ecommerce_Back_End.Model.Data.ProductSpecification", b =>
                {
                    b.Property<int>("PROSPECID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PROSPECID"));

                    b.Property<string>("AUDIO")
                        .HasColumnType("text");

                    b.Property<string>("BACKPANELCONNECTOR")
                        .HasColumnType("text");

                    b.Property<string>("BARCODE")
                        .HasColumnType("text");

                    b.Property<string>("BATTERY")
                        .HasColumnType("text");

                    b.Property<string>("BIOS")
                        .HasColumnType("text");

                    b.Property<string>("BRIGHTNESS")
                        .HasColumnType("text");

                    b.Property<string>("CABLELENGTH")
                        .HasColumnType("text");

                    b.Property<string>("CHIPSET")
                        .HasColumnType("text");

                    b.Property<string>("CONNECTIVITY")
                        .HasColumnType("text");

                    b.Property<string>("DEPTH")
                        .HasColumnType("text");

                    b.Property<string>("DISPLAY")
                        .HasColumnType("text");

                    b.Property<string>("DPI")
                        .HasColumnType("text");

                    b.Property<string>("EXPANSIONSLOT")
                        .HasColumnType("text");

                    b.Property<string>("HEIGHT")
                        .HasColumnType("text");

                    b.Property<string>("INTERNALIO")
                        .HasColumnType("text");

                    b.Property<string>("IOCONTROLLER")
                        .HasColumnType("text");

                    b.Property<string>("LAN")
                        .HasColumnType("text");

                    b.Property<string>("MEMORY")
                        .HasColumnType("text");

                    b.Property<string>("ONBOARDGRAPHICS")
                        .HasColumnType("text");

                    b.Property<string>("OS")
                        .HasColumnType("text");

                    b.Property<string>("PANEL_TYPE")
                        .HasColumnType("text");

                    b.Property<string>("PROCESSOR")
                        .HasColumnType("text");

                    b.Property<string>("REFRESH_RATE")
                        .HasColumnType("text");

                    b.Property<string>("RESOLUTION")
                        .HasColumnType("text");

                    b.Property<string>("STORAGE")
                        .HasColumnType("text");

                    b.Property<string>("STORAGEINTERFACE")
                        .HasColumnType("text");

                    b.Property<string>("SYSREQUIREMENT")
                        .HasColumnType("text");

                    b.Property<string>("UNIQUEFEATURE")
                        .HasColumnType("text");

                    b.Property<string>("USB")
                        .HasColumnType("text");

                    b.Property<string>("VIDEOCARD")
                        .HasColumnType("text");

                    b.Property<string>("WARRANTY")
                        .HasColumnType("text");

                    b.Property<string>("WEIGHT")
                        .HasColumnType("text");

                    b.Property<string>("WIDTH")
                        .HasColumnType("text");

                    b.Property<string>("WIFI")
                        .HasColumnType("text");

                    b.Property<string>("WIRELESSCONECT")
                        .HasColumnType("text");

                    b.HasKey("PROSPECID");

                    b.ToTable("PRODUCTSPECIFICATION_TBL");
                });

            modelBuilder.Entity("Ecommerce_Back_End.Model.Data.SubCategory", b =>
                {
                    b.Property<int>("SUBCATEID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SUBCATEID"));

                    b.Property<int>("CATEID")
                        .HasColumnType("integer");

                    b.Property<string>("STATUS")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SUBCATEGORY")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("SUBCATEID");

                    b.ToTable("SUBCATEGORY_TBL");
                });

            modelBuilder.Entity("Ecommerce_Back_End.Model.Data.User", b =>
                {
                    b.Property<int>("USERID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("USERID"));

                    b.Property<DateTime?>("CREATEDATE")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DOB")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EMAIL")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GENDER")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("MODIFIEDDATE")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PASSWORD")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PHONE")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("USERNAME")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("USERTYPE")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("USERID");

                    b.HasIndex("USERNAME")
                        .IsUnique();

                    b.ToTable("USER_TBL");
                });
#pragma warning restore 612, 618
        }
    }
}
